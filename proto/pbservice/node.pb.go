// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/pbservice/node.proto

package pbservice

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	pbcommon "github.com/hashicorp/consul/proto/pbcommon"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// CheckServiceNode is used to provide the node, its service
// definition, as well as a HealthCheck that is associated.
type CheckServiceNode struct {
	Node                 *Node          `protobuf:"bytes,1,opt,name=Node,proto3" json:"Node,omitempty"`
	Service              *NodeService   `protobuf:"bytes,2,opt,name=Service,proto3" json:"Service,omitempty"`
	Checks               []*HealthCheck `protobuf:"bytes,3,rep,name=Checks,proto3" json:"Checks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CheckServiceNode) Reset()         { *m = CheckServiceNode{} }
func (m *CheckServiceNode) String() string { return proto.CompactTextString(m) }
func (*CheckServiceNode) ProtoMessage()    {}
func (*CheckServiceNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_bbc215b78fa95fe5, []int{0}
}

func (m *CheckServiceNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckServiceNode.Unmarshal(m, b)
}
func (m *CheckServiceNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckServiceNode.Marshal(b, m, deterministic)
}
func (m *CheckServiceNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckServiceNode.Merge(m, src)
}
func (m *CheckServiceNode) XXX_Size() int {
	return xxx_messageInfo_CheckServiceNode.Size(m)
}
func (m *CheckServiceNode) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckServiceNode.DiscardUnknown(m)
}

var xxx_messageInfo_CheckServiceNode proto.InternalMessageInfo

func (m *CheckServiceNode) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *CheckServiceNode) GetService() *NodeService {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *CheckServiceNode) GetChecks() []*HealthCheck {
	if m != nil {
		return m.Checks
	}
	return nil
}

// Node contains information about a node.
//
// mog annotation:
//
// target=github.com/hashicorp/consul/agent/structs.Node
// output=node.gen.go
// name=Structs
type Node struct {
	// mog: func-to=NodeIDType func-from=string
	ID              string            `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Node            string            `protobuf:"bytes,2,opt,name=Node,proto3" json:"Node,omitempty"`
	Partition       string            `protobuf:"bytes,8,opt,name=Partition,proto3" json:"Partition,omitempty"`
	Address         string            `protobuf:"bytes,3,opt,name=Address,proto3" json:"Address,omitempty"`
	Datacenter      string            `protobuf:"bytes,4,opt,name=Datacenter,proto3" json:"Datacenter,omitempty"`
	TaggedAddresses map[string]string `protobuf:"bytes,5,rep,name=TaggedAddresses,proto3" json:"TaggedAddresses,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Meta            map[string]string `protobuf:"bytes,6,rep,name=Meta,proto3" json:"Meta,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// mog: func-to=RaftIndexToStructs func-from=NewRaftIndexFromStructs
	RaftIndex            *pbcommon.RaftIndex `protobuf:"bytes,7,opt,name=RaftIndex,proto3" json:"RaftIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_bbc215b78fa95fe5, []int{1}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Node) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *Node) GetPartition() string {
	if m != nil {
		return m.Partition
	}
	return ""
}

func (m *Node) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Node) GetDatacenter() string {
	if m != nil {
		return m.Datacenter
	}
	return ""
}

func (m *Node) GetTaggedAddresses() map[string]string {
	if m != nil {
		return m.TaggedAddresses
	}
	return nil
}

func (m *Node) GetMeta() map[string]string {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Node) GetRaftIndex() *pbcommon.RaftIndex {
	if m != nil {
		return m.RaftIndex
	}
	return nil
}

// NodeService is a service provided by a node
//
// mog annotation:
//
// target=github.com/hashicorp/consul/agent/structs.NodeService
// output=node.gen.go
// name=Structs
type NodeService struct {
	// Kind is the kind of service this is. Different kinds of services may
	// have differing validation, DNS behavior, etc. An empty kind will default
	// to the Default kind. See ServiceKind for the full list of kinds.
	// mog: func-to=structs.ServiceKind func-from=string
	Kind    string   `protobuf:"bytes,1,opt,name=Kind,proto3" json:"Kind,omitempty"`
	ID      string   `protobuf:"bytes,2,opt,name=ID,proto3" json:"ID,omitempty"`
	Service string   `protobuf:"bytes,3,opt,name=Service,proto3" json:"Service,omitempty"`
	Tags    []string `protobuf:"bytes,4,rep,name=Tags,proto3" json:"Tags,omitempty"`
	Address string   `protobuf:"bytes,5,opt,name=Address,proto3" json:"Address,omitempty"`
	// mog: func-to=MapStringServiceAddressToStructs func-from=NewMapStringServiceAddressFromStructs
	TaggedAddresses map[string]*ServiceAddress `protobuf:"bytes,15,rep,name=TaggedAddresses,proto3" json:"TaggedAddresses,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Meta            map[string]string          `protobuf:"bytes,6,rep,name=Meta,proto3" json:"Meta,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// mog: func-to=int func-from=int32
	Port       int32  `protobuf:"varint,7,opt,name=Port,proto3" json:"Port,omitempty"`
	SocketPath string `protobuf:"bytes,17,opt,name=SocketPath,proto3" json:"SocketPath,omitempty"`
	// mog: func-to=WeightsPtrToStructs func-from=NewWeightsPtrFromStructs
	Weights           *Weights `protobuf:"bytes,8,opt,name=Weights,proto3" json:"Weights,omitempty"`
	EnableTagOverride bool     `protobuf:"varint,9,opt,name=EnableTagOverride,proto3" json:"EnableTagOverride,omitempty"`
	// Proxy is the configuration set for Kind = connect-proxy. It is mandatory in
	// that case and an error to be set for any other kind. This config is part of
	// a proxy service definition and is distinct from but shares some fields with
	// the Connect.Proxy which configures a managed proxy as part of the actual
	// service's definition. This duplication is ugly but seemed better than the
	// alternative which was to re-use the same struct fields for both cases even
	// though the semantics are different and the non-shred fields make no sense
	// in the other case. ProxyConfig may be a more natural name here, but it's
	// confusing for the UX because one of the fields in ConnectProxyConfig is
	// also called just "Config"
	Proxy *ConnectProxyConfig `protobuf:"bytes,11,opt,name=Proxy,proto3" json:"Proxy,omitempty"`
	// Connect are the Connect settings for a service. This is purposely NOT
	// a pointer so that we never have to nil-check this.
	Connect *ServiceConnect `protobuf:"bytes,12,opt,name=Connect,proto3" json:"Connect,omitempty"`
	// LocallyRegisteredAsSidecar is private as it is only used by a local agent
	// state to track if the service was registered from a nested sidecar_service
	// block. We need to track that so we can know whether we need to deregister
	// it automatically too if it's removed from the service definition or if the
	// parent service is deregistered. Relying only on ID would cause us to
	// deregister regular services if they happen to be registered using the same
	// ID scheme as our sidecars do by default. We could use meta but that gets
	// unpleasant because we can't use the consul- prefix from an agent (reserved
	// for use internally but in practice that means within the state store or in
	// responses only), and it leaks the detail publicly which people might rely
	// on which is a bit unpleasant for something that is meant to be config-file
	// syntax sugar. Note this is not translated to ServiceNode and friends and
	// may not be set on a NodeService that isn't the one the agent registered and
	// keeps in it's local state. We never want this rendered in JSON as it's
	// internal only. Right now our agent endpoints return api structs which don't
	// include it but this is a safety net incase we change that or there is
	// somewhere this is used in API output.
	LocallyRegisteredAsSidecar bool `protobuf:"varint,13,opt,name=LocallyRegisteredAsSidecar,proto3" json:"LocallyRegisteredAsSidecar,omitempty"`
	// mog: func-to=EnterpriseMetaToStructs func-from=NewEnterpriseMetaFromStructs
	EnterpriseMeta *pbcommon.EnterpriseMeta `protobuf:"bytes,16,opt,name=EnterpriseMeta,proto3" json:"EnterpriseMeta,omitempty"`
	// mog: func-to=RaftIndexToStructs func-from=NewRaftIndexFromStructs
	RaftIndex            *pbcommon.RaftIndex `protobuf:"bytes,14,opt,name=RaftIndex,proto3" json:"RaftIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *NodeService) Reset()         { *m = NodeService{} }
func (m *NodeService) String() string { return proto.CompactTextString(m) }
func (*NodeService) ProtoMessage()    {}
func (*NodeService) Descriptor() ([]byte, []int) {
	return fileDescriptor_bbc215b78fa95fe5, []int{2}
}

func (m *NodeService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeService.Unmarshal(m, b)
}
func (m *NodeService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeService.Marshal(b, m, deterministic)
}
func (m *NodeService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeService.Merge(m, src)
}
func (m *NodeService) XXX_Size() int {
	return xxx_messageInfo_NodeService.Size(m)
}
func (m *NodeService) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeService.DiscardUnknown(m)
}

var xxx_messageInfo_NodeService proto.InternalMessageInfo

func (m *NodeService) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *NodeService) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *NodeService) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *NodeService) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *NodeService) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *NodeService) GetTaggedAddresses() map[string]*ServiceAddress {
	if m != nil {
		return m.TaggedAddresses
	}
	return nil
}

func (m *NodeService) GetMeta() map[string]string {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *NodeService) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *NodeService) GetSocketPath() string {
	if m != nil {
		return m.SocketPath
	}
	return ""
}

func (m *NodeService) GetWeights() *Weights {
	if m != nil {
		return m.Weights
	}
	return nil
}

func (m *NodeService) GetEnableTagOverride() bool {
	if m != nil {
		return m.EnableTagOverride
	}
	return false
}

func (m *NodeService) GetProxy() *ConnectProxyConfig {
	if m != nil {
		return m.Proxy
	}
	return nil
}

func (m *NodeService) GetConnect() *ServiceConnect {
	if m != nil {
		return m.Connect
	}
	return nil
}

func (m *NodeService) GetLocallyRegisteredAsSidecar() bool {
	if m != nil {
		return m.LocallyRegisteredAsSidecar
	}
	return false
}

func (m *NodeService) GetEnterpriseMeta() *pbcommon.EnterpriseMeta {
	if m != nil {
		return m.EnterpriseMeta
	}
	return nil
}

func (m *NodeService) GetRaftIndex() *pbcommon.RaftIndex {
	if m != nil {
		return m.RaftIndex
	}
	return nil
}

func init() {
	proto.RegisterType((*CheckServiceNode)(nil), "pbservice.CheckServiceNode")
	proto.RegisterType((*Node)(nil), "pbservice.Node")
	proto.RegisterMapType((map[string]string)(nil), "pbservice.Node.MetaEntry")
	proto.RegisterMapType((map[string]string)(nil), "pbservice.Node.TaggedAddressesEntry")
	proto.RegisterType((*NodeService)(nil), "pbservice.NodeService")
	proto.RegisterMapType((map[string]string)(nil), "pbservice.NodeService.MetaEntry")
	proto.RegisterMapType((map[string]*ServiceAddress)(nil), "pbservice.NodeService.TaggedAddressesEntry")
}

func init() {
	proto.RegisterFile("proto/pbservice/node.proto", fileDescriptor_bbc215b78fa95fe5)
}

var fileDescriptor_bbc215b78fa95fe5 = []byte{
	// 646 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xdb, 0x6e, 0xd3, 0x40,
	0x10, 0x55, 0xee, 0xcd, 0x04, 0x7a, 0x59, 0x55, 0x68, 0x09, 0x14, 0x85, 0xc2, 0x43, 0xa5, 0xb6,
	0x31, 0x6a, 0x91, 0x40, 0x3c, 0x54, 0xea, 0x4d, 0xa2, 0x02, 0x4a, 0xb4, 0x2d, 0x42, 0x42, 0xe2,
	0x61, 0x63, 0x4f, 0x6d, 0xab, 0xa9, 0x37, 0x5a, 0x6f, 0xab, 0xe6, 0x53, 0xf8, 0x0a, 0xbe, 0x83,
	0xbf, 0x42, 0x3b, 0xde, 0x24, 0x8e, 0x5b, 0x50, 0x90, 0x78, 0xf2, 0x7a, 0xce, 0x39, 0xb3, 0xe3,
	0x39, 0x33, 0x86, 0xf6, 0x50, 0x2b, 0xa3, 0xbc, 0x61, 0x3f, 0x45, 0x7d, 0x13, 0xfb, 0xe8, 0x25,
	0x2a, 0xc0, 0x2e, 0x05, 0x59, 0x73, 0x12, 0x6d, 0x3f, 0x19, 0xd3, 0x7c, 0x75, 0x75, 0xa5, 0x12,
	0x2f, 0x7b, 0x64, 0xbc, 0xf6, 0xf3, 0x62, 0x8e, 0x08, 0xe5, 0xc0, 0x44, 0x7e, 0x84, 0xfe, 0xa5,
	0xa3, 0xac, 0x15, 0x29, 0xee, 0x99, 0xc1, 0xeb, 0x3f, 0x4a, 0xb0, 0x7c, 0x68, 0xe9, 0x67, 0x59,
	0xf8, 0x54, 0x05, 0xc8, 0x5e, 0x40, 0xd5, 0x3e, 0x79, 0xa9, 0x53, 0xda, 0x68, 0xed, 0x2c, 0x75,
	0x27, 0xe2, 0xae, 0x0d, 0x0b, 0x02, 0xd9, 0x2b, 0x68, 0x38, 0x0d, 0x2f, 0x13, 0xef, 0x51, 0x81,
	0xe7, 0x50, 0x31, 0xa6, 0xb1, 0x2e, 0xd4, 0xe9, 0xaa, 0x94, 0x57, 0x3a, 0x95, 0x82, 0xe0, 0x3d,
	0x15, 0x4e, 0xb0, 0x70, 0xac, 0xf5, 0x9f, 0x95, 0xac, 0x0e, 0xb6, 0x08, 0xe5, 0x93, 0x23, 0xaa,
	0xa6, 0x29, 0xca, 0x27, 0x47, 0x8c, 0xb9, 0xfa, 0xca, 0x14, 0xc9, 0x38, 0x4f, 0xa1, 0xd9, 0x93,
	0xda, 0xc4, 0x26, 0x56, 0x09, 0x5f, 0x20, 0x60, 0x1a, 0x60, 0x1c, 0x1a, 0xfb, 0x41, 0xa0, 0x31,
	0xb5, 0x77, 0x5b, 0x6c, 0xfc, 0xca, 0x9e, 0x01, 0x1c, 0x49, 0x23, 0x7d, 0x4c, 0x0c, 0x6a, 0x5e,
	0x25, 0x30, 0x17, 0x61, 0xa7, 0xb0, 0x74, 0x2e, 0xc3, 0x10, 0x03, 0x27, 0xc0, 0x94, 0xd7, 0xa8,
	0xfa, 0x97, 0x85, 0xcf, 0xed, 0x16, 0x68, 0xc7, 0x89, 0xd1, 0x23, 0x51, 0x14, 0xb3, 0x6d, 0xa8,
	0x7e, 0x42, 0x23, 0x79, 0x9d, 0x92, 0x3c, 0x2e, 0x26, 0xb1, 0x58, 0xa6, 0x24, 0x1a, 0xf3, 0xa0,
	0x29, 0xe4, 0x85, 0x39, 0x49, 0x02, 0xbc, 0xe5, 0x0d, 0xea, 0xf3, 0x4a, 0xd7, 0xcd, 0xc0, 0x04,
	0x10, 0x53, 0x4e, 0xfb, 0x00, 0x56, 0xef, 0x2b, 0x84, 0x2d, 0x43, 0xe5, 0x12, 0x47, 0xae, 0x89,
	0xf6, 0xc8, 0x56, 0xa1, 0x76, 0x23, 0x07, 0xd7, 0xe3, 0x36, 0x66, 0x2f, 0xef, 0xca, 0x6f, 0x4b,
	0xed, 0x37, 0xd0, 0x9c, 0xd4, 0xf1, 0x2f, 0xc2, 0xf5, 0x5f, 0x75, 0x68, 0xe5, 0xac, 0xb7, 0x46,
	0x7d, 0x88, 0x93, 0xc0, 0x89, 0xe9, 0xec, 0xcc, 0x2c, 0x4f, 0xcc, 0xe4, 0xd3, 0x39, 0x72, 0xd6,
	0xe4, 0xd4, 0xe7, 0x32, 0x4c, 0x79, 0xb5, 0x53, 0xb1, 0x6a, 0x7b, 0xce, 0x1b, 0x59, 0x9b, 0x35,
	0xf2, 0xcb, 0x5d, 0xa3, 0x96, 0xa8, 0xc7, 0x9b, 0xf7, 0xcf, 0xe5, 0x9c, 0x7e, 0xbd, 0x9e, 0xf1,
	0xab, 0xf3, 0x87, 0x5c, 0x45, 0xdb, 0x18, 0x54, 0x7b, 0x4a, 0x1b, 0x72, 0xac, 0x26, 0xe8, 0x6c,
	0x27, 0xed, 0x4c, 0xf9, 0x97, 0x68, 0x7a, 0xd2, 0x44, 0x7c, 0x25, 0x9b, 0xb4, 0x69, 0x84, 0x6d,
	0x41, 0xe3, 0x2b, 0xc6, 0x61, 0x64, 0x52, 0x9a, 0xdf, 0xd6, 0x0e, 0xcb, 0x5d, 0xe6, 0x10, 0x31,
	0xa6, 0xb0, 0x2d, 0x58, 0x39, 0x4e, 0x64, 0x7f, 0x80, 0xe7, 0x32, 0xfc, 0x7c, 0x83, 0x5a, 0xc7,
	0x01, 0xf2, 0x66, 0xa7, 0xb4, 0xb1, 0x20, 0xee, 0x02, 0x6c, 0x17, 0x6a, 0x3d, 0xad, 0x6e, 0x47,
	0xbc, 0x45, 0x99, 0xd7, 0x72, 0x99, 0x0f, 0x55, 0x92, 0xa0, 0x6f, 0x08, 0x3e, 0x54, 0xc9, 0x45,
	0x1c, 0x8a, 0x8c, 0xcb, 0x76, 0xa1, 0xe1, 0x40, 0xfe, 0x80, 0x64, 0xf9, 0x69, 0x75, 0x5f, 0xee,
	0x08, 0x62, 0xcc, 0x64, 0x7b, 0xd0, 0xfe, 0xa8, 0x7c, 0x39, 0x18, 0x8c, 0x04, 0x86, 0x71, 0x6a,
	0x50, 0x63, 0xb0, 0x9f, 0x9e, 0xc5, 0x01, 0xfa, 0x52, 0xf3, 0x87, 0x54, 0xe0, 0x5f, 0x18, 0x6c,
	0x0f, 0x16, 0x8f, 0xed, 0xe2, 0x0d, 0x75, 0x9c, 0x22, 0x75, 0x7e, 0xd9, 0xfd, 0x5d, 0xdc, 0xd4,
	0xcf, 0xa2, 0xa2, 0xc0, 0x9e, 0x5d, 0x98, 0xc5, 0x39, 0x16, 0xe6, 0xfb, 0xdc, 0x0b, 0xe3, 0xe5,
	0xe7, 0xfe, 0xde, 0x6e, 0xb8, 0x14, 0xff, 0x63, 0x97, 0x0e, 0xb6, 0xbf, 0x6d, 0x86, 0xb1, 0x89,
	0xae, 0xfb, 0xb6, 0x7a, 0x2f, 0x92, 0x69, 0x14, 0xfb, 0x4a, 0x0f, 0x3d, 0x5f, 0x25, 0xe9, 0xf5,
	0xc0, 0x2b, 0xfc, 0xd6, 0xfb, 0x75, 0x0a, 0xec, 0xfe, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xf7, 0x69,
	0xf0, 0xb9, 0x57, 0x06, 0x00, 0x00,
}
